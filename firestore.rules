/**
 * @file Firestore Security Rules
 * @description This ruleset enforces a strict owner-only access model for Entrepots, Depots, and Livreurs.
 *              Tournees and Taches are accessible only via their parent Entrepot.
 *
 * Data Structure:
 * - /entrepots/{entrepotId}: Collection of warehouses.
 * - /entrepots/{entrepotId}/tournees/{tourneeId}: Subcollection of delivery tours for each warehouse.
 * - /entrepots/{entrepotId}/tournees/{tourneeId}/taches/{tacheId}: Subcollection of tasks for each delivery tour.
 * - /depots/{depotId}: Collection of delivery depots.
 * - /livreurs/{livreurId}: Collection of delivery drivers.
 *
 * Key Security Decisions:
 * - User listing is disabled for all top-level collections to prevent unauthorized data discovery.
 * - All write operations require a verified user identity (authentication).
 * - Ownership is enforced by matching the document ID with the authenticated user's UID.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows access control to the Entrepot collection. Only authenticated users can create Entrepot documents, where the entrepotId must match the authenticated user's uid.
     *              Update and delete are disallowed.
     * @path /entrepots/{entrepotId}
     * @allow (create) - Authenticated user creates a new Entrepot document where entrepotId matches their UID.
     * @deny (create) - Authenticated user attempts to create an Entrepot document where entrepotId does not match their UID.
     * @deny (update) - Any user attempts to update an Entrepot document.
     * @deny (delete) - Any user attempts to delete an Entrepot document.
     * @principle Enforces document ownership for writes and restricts modification to owner.
     */
    match /entrepots/{entrepotId} {
      // Only signed-in users can access
      allow get: if isSignedIn();
      allow list: if false;

      // Only the user themselves can create an entrepot document, and must have an id matching their uid
      allow create: if isSignedIn() && request.auth.uid == entrepotId;

      // no one is allowed to update or delete entrepots
      allow update: if false;
      allow delete: if false;

      match /tournees/{tourneeId} {
        // Only signed-in users can access
        allow get: if isSignedIn();
        allow list: if false;

        // Only the user themselves can create a tournee document
        allow create: if isSignedIn();

        // no one is allowed to update or delete tournees
        allow update: if false;
        allow delete: if false;

        match /taches/{tacheId} {
          // Only signed-in users can access
          allow get: if isSignedIn();
          allow list: if false;

          // Only the user themselves can create a tache document
          allow create: if isSignedIn();

          // no one is allowed to update or delete taches
          allow update: if false;
          allow delete: if false;
        }
      }
    }

    /**
     * @description Allows access control to the Depot collection. Only authenticated users can create Depot documents, where the depotId must match the authenticated user's uid.
     *              Update and delete are disallowed.
     * @path /depots/{depotId}
     * @allow (create) - Authenticated user creates a new Depot document where depotId matches their UID.
     * @deny (create) - Authenticated user attempts to create a Depot document where depotId does not match their UID.
     * @deny (update) - Any user attempts to update a Depot document.
     * @deny (delete) - Any user attempts to delete a Depot document.
     * @principle Enforces document ownership for writes and restricts modification to owner.
     */
    match /depots/{depotId} {
      // Only signed-in users can access
      allow get: if isSignedIn();
      allow list: if false;

      // Only the user themselves can create a depot document, and must have an id matching their uid
      allow create: if isSignedIn() && request.auth.uid == depotId;

      // no one is allowed to update or delete depots
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows access control to the Livreur collection. Only authenticated users can create Livreur documents, where the livreurId must match the authenticated user's uid.
     *              Update and delete are disallowed.
     * @path /livreurs/{livreurId}
     * @allow (create) - Authenticated user creates a new Livreur document where livreurId matches their UID.
     * @deny (create) - Authenticated user attempts to create a Livreur document where livreurId does not match their UID.
     * @deny (update) - Any user attempts to update a Livreur document.
     * @deny (delete) - Any user attempts to delete a Livreur document.
     * @principle Enforces document ownership for writes and restricts modification to owner.
     */
    match /livreurs/{livreurId} {
      // Only signed-in users can access
      allow get: if isSignedIn();
      allow list: if false;

      // Only the user themselves can create a livreur document, and must have an id matching their uid
      allow create: if isSignedIn() && request.auth.uid == livreurId;

      // no one is allowed to update or delete livreurs
      allow update: if false;
      allow delete: if false;
    }
  }

  // Helper function to determine if the user is signed in
  function isSignedIn() {
    return request.auth != null;
  }

  // Helper function to determine if the user is the owner of the document
  function isOwner(userId) {
    return request.auth.uid == userId;
  }
}